import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../models/topic_model.dart';
import 'collapsible_card.dart';

class AddDataForm extends StatefulWidget {
  const AddDataForm({super.key});

  @override
  AddDataFormState createState() => AddDataFormState();
}

class AddDataFormState extends State<AddDataForm> {
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _descriptionController = TextEditingController();
  final TextEditingController _responsibleController = TextEditingController();
  final TextEditingController _assignmentsController = TextEditingController();

  @override
  void dispose() {
    _titleController.dispose();
    _descriptionController.dispose();
    _responsibleController.dispose();
    _assignmentsController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final topicProvider = Provider.of<TopicProvider>(context);

    return CollapsibleCard(
      title: 'Add responsible areas',
      content: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextFormField(
              controller: _titleController,
              decoration: const InputDecoration(
                labelText: 'title',
              ),
            ),
            const SizedBox(height: 16),
            TextFormField(
              controller: _descriptionController,
              decoration: const InputDecoration(
                labelText: 'description',
              ),
            ),
            const SizedBox(height: 16),
            TextFormField(
              controller: _responsibleController,
              decoration: const InputDecoration(
                labelText: 'responsible',
              ),
            ),
            const SizedBox(height: 16),
            TextFormField(
              controller: _assignmentsController,
              decoration: const InputDecoration(
                labelText: 'assignments',
              ),
            ),
            const SizedBox(height: 16),
            ElevatedButton(
              onPressed: () {
                // Get form field values
                final title = _titleController.text;
                final description = _descriptionController.text;
                final responsible = _responsibleController.text;
                final assignments = _assignmentsController.text;

                // Create a new topic
                final topic = TopicModel(
                  id: 0, // Assigning 0 as a temporary value, since it will be auto-generated by the database
                  title: title,
                  description: description,
                  responsible: responsible,
                  assignments: assignments,
                );

                // Perform database operation (e.g., insert data)
                topicProvider.insertTopic(topic);

                // Clear form fields
                _titleController.clear();
                _descriptionController.clear();
                _responsibleController.clear();
                _assignmentsController.clear();
              },
              child: const Text('Add'),
            ),
          ],
        ),
      ),
    );
  }
}
